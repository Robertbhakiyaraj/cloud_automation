# the Harness infrastructure name assigned for this deployment
# the name must match the source control configuration directory for this deployment
# in most cases the name matches the namespace unless there are multiple deployments to the same namespace
name: psh
# the Harness namespace setup for this deployment.
namespace: <+infra.namespace>
appType: PSH

image: docker-flume.nexus-dev.onefiserv.net/epp/psh:<+artifact.tag>
#image        : <+artifact.image>

# the image registry hostname needed to pull the mqm image
# Nexus: flume-docker-local.nexus-dev.onefiserv.net
imageRegistryHostname: <+artifact.registryHostname>

imagePullSecret: nexus-image-pull

# host for nfs volume definition
nfsHost: nfs2159.irvsx41001.nas.onefiserv.net
# path for nfs volume definition
nfsPath: /ifs/irvsx41001/nfs/bs/alpha/be/apps/epp-nsf/
# sub path to the gateway directory in the nfs share under nfsPath. For infra.name is replaced with tenant id for deployment to upper environments
nfsGatewaySubPath: gateway/psh/<+infra.name>

# the US_Solution tenant client profile
client: cnb

# obfuscated web application context root needed for AG configurations
obfuscatedContextRoot: <+infra.name>

# database configuration parameters
q5DataSourceURL: "jdbc:oracle:thin:@10.155.144.68:1521/epp_aks_cnb_alpha"
q5DataSourceUser: CNB_PSH_ALPHA
q5DataSourcePassword: secret

# Weblogic trust store JVM options
keyTrustStoreJVMOptions: "-Djavax.net.ssl.keyStore=/u01/oracle/shared/resources/security/truststore.jks -Djavax.net.ssl.keyStorePassword=esfCoreConnector@BTAT2 -Djavax.net.ssl.trustStore=/u01/oracle/shared/resources/security/truststore.jks -Djavax.net.ssl.trustStorePassword=esfCoreConnector@BTAT2"

# NOTE: to stop a deployment change deploy value to false and re-run the Harness pipeline

gtwsim:
  deploy: true # if set to false the deployment replicas value is set to 0

gui:
  deploy: true # if set to false the deployment replicas value is set to 0
  defaultpage: false

stp:
  deploy: true  # if set to false the deployment replicas value is set to 0

customQbol:
  runjob: false

# deploy MQM pod for testing purposes only
mqm:
  deploy: true
